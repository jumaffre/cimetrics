# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

trigger:
  branches:
    include:
      - '*'
      - refs/tags/*
    exclude:
      - cimetrics

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'

- script: env
  displayName: env

- script: pip install .
  displayName: 'Install library'

- script: pip install -r dev-requirements.txt
  displayName: 'Install dev dependencies'

- script: black --check cimetrics
  displayName: 'Check code format'

- script: mypy -p cimetrics --ignore-missing-imports
  displayName: 'Type checking'

# Your application. This step collects and uploads your metrics
# to your MongoDB instance.
- script: python app/main.py
  env:
    METRICS_MONGO_CONNECTION: $(METRICS_MONGO_CONNECTION)
  displayName: 'Run app and collect metrics'

# This step generates a graph reporting the differences between
# your branch and the target branch.
- script: python -m cimetrics.plot
  env:
    METRICS_MONGO_CONNECTION: $(METRICS_MONGO_CONNECTION)
  displayName: 'Plot metrics'

# This step publishes a report comment on the GitHub Request
# using GITHUB_TOKEN as authentication (use secret variables!)
- script: python -m cimetrics.github_pr
  env:
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    AZURE_BLOB_URL: $(AZURE_BLOB_URL)
    AZURE_WEB_URL: $(AZURE_WEB_URL)
  displayName: 'Post metrics graphs as PR comment'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: _cimetrics
    artifactName: metrics
  displayName: 'Publish metrics graphs as build artifact'

# Automated release of tagged commits to https://pypi.org/project/cimetrics/
- script: |
    python setup.py sdist
    pip install twine
    twine upload -u __token__ -p $(pypi_token) dist/*
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  displayName: Automated Release to https://pypi.org/project/cimetrics/

